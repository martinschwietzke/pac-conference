<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
	<name>conference</name>
	<modelVersion>4.0.0</modelVersion>
	<groupId>com.prodyna.pac</groupId>
	<artifactId>conference</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<packaging>pom</packaging>

	<url>http://jboss.org/jbossas</url>
	<licenses>
		<license>
			<name>Apache License, Version 2.0</name>
			<distribution>repo</distribution>
			<url>http://www.apache.org/licenses/LICENSE-2.0.html</url>
		</license>
	</licenses>
	<modules>
		<module>pac-conference-web</module>
		<module>pac-conference-ear</module>
		<module>pac-conference-common</module>
		<module>pac-conference-conference-api</module>
		<module>pac-conference-conference-impl</module>
		<module>pac-conference-talk-api</module>
		<module>pac-conference-talk-impl</module>
		<module>pac-conference-room-api</module>
		<module>pac-conference-room-impl</module>
		<module>pac-conference-speaker-api</module>
		<module>pac-conference-speaker-impl</module>
	</modules>

	<properties>
		<!-- Explicitly declaring the source encoding eliminates the following 
			message: -->
		<!-- [WARNING] Using platform encoding (UTF-8 actually) to copy filtered 
			resources, i.e. build is platform dependent! -->
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>

		<!-- JBoss dependency versions -->

		<version.jboss.maven.plugin>7.4.Final</version.jboss.maven.plugin>

		<!-- Define the version of the JBoss BOMs we want to import to specify 
			tested stacks. -->
		<version.jboss.bom>1.0.7.Final</version.jboss.bom>
		<!-- Alternatively, comment out the above line, and un-comment the line 
			below to use version 1.0.4.Final-redhat-4 which is a release certified to 
			work with JBoss EAP 6. It requires you have access to the JBoss EAP 6 maven 
			repository. -->
		<!-- <version.jboss.bom>1.0.4.Final-redhat-4</version.jboss.bom>> -->

		<version.jboss.as>7.1.3.Final</version.jboss.as>
		<!-- Alternatively, comment out the above line, and un-comment the line 
			below to use version 7.2.0.Final-redhat-8 which is a release certified to 
			work with JBoss EAP 6. It requires you have access to the JBoss EAP 6 maven 
			repository. -->
		<!-- <version.jboss.as>7.2.0.Final-redhat-8</version.jboss.as> -->

		<!-- other plugin versions -->
		<version.ear.plugin>2.6</version.ear.plugin>
		<version.ejb.plugin>2.3</version.ejb.plugin>
		<version.surefire.plugin>2.10</version.surefire.plugin>
		<version.war.plugin>2.1.1</version.war.plugin>

		<!-- maven-compiler-plugin -->
		<maven.compiler.target>1.6</maven.compiler.target>
		<maven.compiler.source>1.6</maven.compiler.source>
	</properties>

	<dependencyManagement>
		<dependencies>

			<!-- Define the version of the EJB jar so that we don't need to repeat 
				ourselves in every module -->
			<dependency>
				<groupId>com.prodyna.pac</groupId>
				<artifactId>pac-conference-conference-impl</artifactId>
				<version>${project.version}</version>
				<type>ejb</type>
			</dependency>
			<dependency>
				<groupId>com.prodyna.pac</groupId>
				<artifactId>pac-conference-speaker-impl</artifactId>
				<version>${project.version}</version>
				<type>ejb</type>
			</dependency>
			<dependency>
				<groupId>com.prodyna.pac</groupId>
				<artifactId>pac-conference-room-impl</artifactId>
				<version>${project.version}</version>
				<type>ejb</type>
			</dependency>
			<dependency>
				<groupId>com.prodyna.pac</groupId>
				<artifactId>pac-conference-talk-impl</artifactId>
				<version>${project.version}</version>
				<type>ejb</type>
			</dependency>
			<dependency>
				<groupId>com.prodyna.pac</groupId>
				<artifactId>pac-conference-conference-api</artifactId>
				<version>${project.version}</version>
				<type>jar</type>
			</dependency>
			<dependency>
				<groupId>com.prodyna.pac</groupId>
				<artifactId>pac-conference-speaker-api</artifactId>
				<version>${project.version}</version>
				<type>jar</type>
			</dependency>
			<dependency>
				<groupId>com.prodyna.pac</groupId>
				<artifactId>pac-conference-room-api</artifactId>
				<version>${project.version}</version>
				<type>jar</type>
			</dependency>
			<dependency>
				<groupId>com.prodyna.pac</groupId>
				<artifactId>pac-conference-talk-api</artifactId>
				<version>${project.version}</version>
				<type>jar</type>
			</dependency>
			<dependency>
				<groupId>com.prodyna.pac</groupId>
				<artifactId>pac-conference-common</artifactId>
				<version>${project.version}</version>
				<type>ejb</type>
			</dependency>


			<!-- Define the version of the WAR so that we don't need to repeat ourselves 
				in every module -->
			<dependency>
				<groupId>com.prodyna.pac</groupId>
				<artifactId>pac-conference-web</artifactId>
				<version>${project.version}</version>
				<type>war</type>
			</dependency>

			<!-- JBoss distributes a complete set of Java EE 6 APIs including a Bill 
				of Materials (BOM). A BOM specifies the versions of a "stack" (or a collection) 
				of artifacts. We use this here so that we always get the correct versions 
				of artifacts. Here we use the jboss-javaee-6.0-with-tools stack (you can 
				read this as the JBoss stack of the Java EE 6 APIs, with some extras tools 
				for your project, such as Arquillian for testing) and the jboss-javaee-6.0-with-hibernate 
				stack you can read this as the JBoss stack of the Java EE 6 APIs, with extras 
				from the Hibernate family of projects) -->
			<dependency>
				<groupId>org.jboss.bom</groupId>
				<artifactId>jboss-javaee-6.0-with-tools</artifactId>
				<version>${version.jboss.bom}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>

			<dependency>
				<groupId>org.jboss.bom</groupId>
				<artifactId>jboss-javaee-6.0-with-hibernate</artifactId>
				<version>${version.jboss.bom}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
		</dependencies>
	</dependencyManagement>
	<dependencies>

		<!-- Test scope dependencies -->
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<scope>test</scope>
		</dependency>

		<!-- Optional, but highly recommended -->
		<!-- Arquillian allows you to test enterprise code such as EJBs and Transactional(JTA) 
			JPA from JUnit/TestNG -->
		<dependency>
			<groupId>org.jboss.arquillian.junit</groupId>
			<artifactId>arquillian-junit-container</artifactId>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>org.jboss.arquillian.protocol</groupId>
			<artifactId>arquillian-protocol-servlet</artifactId>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>org.jboss.as</groupId>
			<artifactId>jboss-as-arquillian-container-remote</artifactId>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>org.jboss.spec.javax.ejb</groupId>
			<artifactId>jboss-ejb-api_3.1_spec</artifactId>
			<scope>provided</scope>
		</dependency>

		<dependency>
			<groupId>javax.enterprise</groupId>
			<artifactId>cdi-api</artifactId>
			<scope>provided</scope>
		</dependency>

		<dependency>
			<groupId>javax.validation</groupId>
			<artifactId>validation-api</artifactId>
			<scope>provided</scope>
		</dependency>

		<dependency>
			<groupId>org.hibernate.javax.persistence</groupId>
			<artifactId>hibernate-jpa-2.0-api</artifactId>
			<scope>provided</scope>
		</dependency>

		<dependency>
			<groupId>org.jboss.spec.javax.jms</groupId>
			<artifactId>jboss-jms-api_1.1_spec</artifactId>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>org.hibernate.javax.persistence</groupId>
			<artifactId>hibernate-jpa-2.0-api</artifactId>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>javax.validation</groupId>
			<artifactId>validation-api</artifactId>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>javax.enterprise</groupId>
			<artifactId>cdi-api</artifactId>
			<scope>provided</scope>
		</dependency>

	</dependencies>
	<build>
		<pluginManagement>
			<plugins>
				<!-- The JBoss AS plugin deploys your ear to a local JBoss AS container -->
				<!-- Due to Maven's lack of intelligence with EARs we need to configure 
					the jboss-as maven plugin to skip deployment for all modules. We then enable 
					it specifically in the ear module. -->
				<plugin>
					<groupId>org.jboss.as.plugins</groupId>
					<artifactId>jboss-as-maven-plugin</artifactId>
					<version>${version.jboss.maven.plugin}</version>
					<inherited>true</inherited>
					<configuration>
						<skip>true</skip>
					</configuration>
				</plugin>
			</plugins>
		</pluginManagement>
	</build>

	<distributionManagement>
		<repository>
			<id>file-repository</id>
			<name>Local Repository</name>
			<url>file://${user.dir}/target/deploy/repository</url>
		</repository>
		<site>
			<id>local-site</id>
			<name>Local deployed site</name>
			<url>file://${user.dir}/target/deploy/site</url>
		</site>
	</distributionManagement>
	<scm>
		<developerConnection>scm:git:ssh://martinschwietzke@github.com//martinschwietzke/pac-conference.git</developerConnection>
		<url>https://github.com/martinschwietzke/pac-conference.git</url>
	</scm>

</project>
