<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>com.prodyna.pac</groupId>
		<artifactId>conference</artifactId>
		<version>0.0.1-SNAPSHOT</version>
	</parent>
	<artifactId>pac-conference-rest</artifactId>
	<packaging>war</packaging>
	<dependencies>
		<!-- Import the JAX-RS API, we use provided scope as the API is included 
			in JBoss AS 7 -->
		<dependency>
			<groupId>org.jboss.spec.javax.ws.rs</groupId>
			<artifactId>jboss-jaxrs-api_1.1_spec</artifactId>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>org.jboss.spec.javax.servlet</groupId>
			<artifactId>jboss-servlet-api_3.0_spec</artifactId>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>com.prodyna.pac</groupId>
			<artifactId>pac-conference-conference-api</artifactId>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>com.prodyna.pac</groupId>
			<artifactId>pac-conference-common</artifactId>
			<type>ejb</type>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>com.prodyna.pac</groupId>
			<artifactId>pac-conference-talk-api</artifactId>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>com.prodyna.pac</groupId>
			<artifactId>pac-conference-room-api</artifactId>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>com.prodyna.pac</groupId>
			<artifactId>pac-conference-speaker-api</artifactId>
			<scope>provided</scope>
		</dependency>
	</dependencies>

	<build>
		<!-- Maven will append the version to the finalName (which is the name 
			given to the generated war, and hence the context root) -->
		<finalName>${project.artifactId}</finalName>
		<plugins>
			<plugin>
				<artifactId>maven-war-plugin</artifactId>
				<version>${version.war.plugin}</version>
				<configuration>
					<!-- Java EE 6 doesn't require web.xml, Maven needs to catch up! -->
					<failOnMissingWebXml>false</failOnMissingWebXml>
				</configuration>
			</plugin>
			<!-- The JBoss AS plugin deploys your war to a local JBoss AS container -->
			<!-- To use, run: mvn package jboss-as:deploy -->
			<plugin>
				<groupId>org.jboss.as.plugins</groupId>
				<artifactId>jboss-as-maven-plugin</artifactId>
			</plugin>
		</plugins>
	</build>
</project>